{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { Table, Button } from 'react-bootstrap';\n// import { getAllUser, updateUser } from '../api/UserRequest'; // Import API functions\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n\n//   // Fetch all users on component mount\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await getAllUser();\n//         setUsers(response.data);\n//       } catch (error) {\n//         console.error('Error fetching users:', error);\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   // Edit User\n//   const handleEditUser = async (id) => {\n//     const updatedData = { firstname: 'Updated', lastname: 'User' }; // Example data\n//     try {\n//       const response = await updateUser(id, updatedData);\n//       setUsers(users.map((user) => (user._id === id ? response.data.user : user)));\n//       alert('User updated successfully');\n//     } catch (error) {\n//       console.error('Error updating user:', error);\n//     }\n//   };\n\n//   // Environment variable for image location\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n//   return (\n//     <>\n//       <Table striped bordered hover>\n//         <thead>\n//           <tr>\n//             <th>Profile</th>\n//             <th>Full Name</th>\n//             <th>Username</th>\n//             <th>Followers</th>\n//             <th>Country</th>\n//             <th>Created Date</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user._id}>\n//               <td>\n//                 <img\n//                   src={user.profilePicture ? `${PF}${user.profilePicture}` : `${PF}default.png`}\n//                   alt=\"Profile\"\n//                   className=\"rounded-circle\"\n//                   width=\"40\"\n//                 />\n//               </td>\n//               <td>{`${user.firstname} ${user.lastname}`}</td>\n//               <td>{user.username}</td>\n//               <td>{user.followers.length}</td>\n//               <td>{user.country}</td>\n//               <td>{new Date(user.createdAt).toLocaleString()}</td>\n\n//               <td>\n//                 <Button\n//                   variant=\"info\"\n//                   size=\"sm\"\n//                   className=\"me-2\"\n//                   onClick={() => handleEditUser(user._id)}\n//                 >\n//                   Edit\n//                 </Button>\n//                 <Button variant=\"danger\" size=\"sm\" className=\"me-2\">\n//                   Delete\n//                 </Button>\n//                 <Button variant=\"warning\" size=\"sm\">\n//                   Block\n//                 </Button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//     </>\n//   );\n// };\n\n// export default UserList;","map":{"version":3,"names":[],"sources":["E:/React/Intern Project/chatlink/src/components/admin/UserList.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { Table, Button } from 'react-bootstrap';\r\n// import { getAllUser, updateUser } from '../api/UserRequest'; // Import API functions\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n\r\n//   // Fetch all users on component mount\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await getAllUser();\r\n//         setUsers(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching users:', error);\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Edit User\r\n//   const handleEditUser = async (id) => {\r\n//     const updatedData = { firstname: 'Updated', lastname: 'User' }; // Example data\r\n//     try {\r\n//       const response = await updateUser(id, updatedData);\r\n//       setUsers(users.map((user) => (user._id === id ? response.data.user : user)));\r\n//       alert('User updated successfully');\r\n//     } catch (error) {\r\n//       console.error('Error updating user:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Environment variable for image location\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n//   return (\r\n//     <>\r\n//       <Table striped bordered hover>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Profile</th>\r\n//             <th>Full Name</th>\r\n//             <th>Username</th>\r\n//             <th>Followers</th>\r\n//             <th>Country</th>\r\n//             <th>Created Date</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user._id}>\r\n//               <td>\r\n//                 <img\r\n//                   src={user.profilePicture ? `${PF}${user.profilePicture}` : `${PF}default.png`}\r\n//                   alt=\"Profile\"\r\n//                   className=\"rounded-circle\"\r\n//                   width=\"40\"\r\n//                 />\r\n//               </td>\r\n//               <td>{`${user.firstname} ${user.lastname}`}</td>\r\n//               <td>{user.username}</td>\r\n//               <td>{user.followers.length}</td>\r\n//               <td>{user.country}</td>\r\n//               <td>{new Date(user.createdAt).toLocaleString()}</td>\r\n\r\n//               <td>\r\n//                 <Button\r\n//                   variant=\"info\"\r\n//                   size=\"sm\"\r\n//                   className=\"me-2\"\r\n//                   onClick={() => handleEditUser(user._id)}\r\n//                 >\r\n//                   Edit\r\n//                 </Button>\r\n//                 <Button variant=\"danger\" size=\"sm\" className=\"me-2\">\r\n//                   Delete\r\n//                 </Button>\r\n//                 <Button variant=\"warning\" size=\"sm\">\r\n//                   Block\r\n//                 </Button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </Table>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}