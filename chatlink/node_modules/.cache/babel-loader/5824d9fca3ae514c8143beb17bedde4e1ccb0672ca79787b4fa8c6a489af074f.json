{"ast":null,"code":"// const authReducer = (state = { authData: null, loading: false, error: false, updateLoading: false },action) =>{\n//   switch(action.type){\n//     case \"AUTH_START\":\n//         return{...state, loading:true, error:false}\n//     case \"AUTH_SUCCESS\":\n//         localStorage.setItem(\"profile\", JSON.stringify({...action?.data}));\n//         return{...state,authData:action.data, loading:false,error:false}\n//     case \"AUTH_FAIL\":\n//         return{...state, loading: false, error: true};\n\n//     case \"UPDATING_START\":\n//         return{...state, updateLoading:true, error:false}\n//     case \"UPDATING_SUCCESS\":\n//         localStorage.setItem(\"profile\", JSON.stringify({...action?.data}));\n//         return{...state,authData:action.data, updateLoading:false,error:false}\n//     case \"UPDATING_FAIL\":\n//         return{...state, updateLoading: false, error: true};\n\n//         case \"FOLLOW_USER\":\n//             return {...state, authData: {...state.authData, user: {...state.authData.user, following: [...state.authData.user.following, action.data]} }}\n\n//           case \"UNFOLLOW_USER\":\n//             return {...state, authData: {...state.authData, user: {...state.authData.user, following: [...state.authData.user.following.filter((personId)=>personId!==action.data)]} }}\n\n//     case \"LOG_OUT\":\n//         localStorage.clear();\n//         return{...state, authData: null, loading: false, error : false, updateLoading: false}\n//     default:\n//         return state\n//   }  \n// }\n// export default authReducer\n\nconst initialState = {\n  authData: null,\n  loading: false,\n  error: false,\n  updateLoading: false\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"AUTH_START\":\n      return {\n        ...state,\n        loading: true,\n        error: false\n      };\n    case \"AUTH_SUCCESS\":\n      // Ensure action.data contains the correct structure, including `isAdmin`\n      localStorage.setItem(\"profile\", JSON.stringify({\n        ...(action === null || action === void 0 ? void 0 : action.data)\n      }));\n      return {\n        ...state,\n        authData: action.data,\n        // action.data should include user and isAdmin\n        loading: false,\n        error: false\n      };\n    case \"AUTH_FAIL\":\n      return {\n        ...state,\n        loading: false,\n        error: true\n      };\n    case \"UPDATING_START\":\n      return {\n        ...state,\n        updateLoading: true,\n        error: false\n      };\n    case \"UPDATING_SUCCESS\":\n      localStorage.setItem(\"profile\", JSON.stringify({\n        ...(action === null || action === void 0 ? void 0 : action.data)\n      }));\n      return {\n        ...state,\n        authData: action.data,\n        updateLoading: false,\n        error: false\n      };\n    case \"UPDATING_FAIL\":\n      return {\n        ...state,\n        updateLoading: false,\n        error: true\n      };\n    case \"FOLLOW_USER\":\n      return {\n        ...state,\n        authData: {\n          ...state.authData,\n          user: {\n            ...state.authData.user,\n            following: [...state.authData.user.following, action.data]\n          }\n        }\n      };\n    case \"UNFOLLOW_USER\":\n      return {\n        ...state,\n        authData: {\n          ...state.authData,\n          user: {\n            ...state.authData.user,\n            following: state.authData.user.following.filter(personId => personId !== action.data)\n          }\n        }\n      };\n    case \"LOG_OUT\":\n      localStorage.clear();\n      return {\n        ...state,\n        authData: null,\n        loading: false,\n        error: false,\n        updateLoading: false\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["initialState","authData","loading","error","updateLoading","authReducer","state","action","type","localStorage","setItem","JSON","stringify","data","user","following","filter","personId","clear"],"sources":["E:/React/Intern Project/chatlink/src/reducers/AuthReducer.js"],"sourcesContent":["// const authReducer = (state = { authData: null, loading: false, error: false, updateLoading: false },action) =>{\r\n//   switch(action.type){\r\n//     case \"AUTH_START\":\r\n//         return{...state, loading:true, error:false}\r\n//     case \"AUTH_SUCCESS\":\r\n//         localStorage.setItem(\"profile\", JSON.stringify({...action?.data}));\r\n//         return{...state,authData:action.data, loading:false,error:false}\r\n//     case \"AUTH_FAIL\":\r\n//         return{...state, loading: false, error: true};\r\n\r\n//     case \"UPDATING_START\":\r\n//         return{...state, updateLoading:true, error:false}\r\n//     case \"UPDATING_SUCCESS\":\r\n//         localStorage.setItem(\"profile\", JSON.stringify({...action?.data}));\r\n//         return{...state,authData:action.data, updateLoading:false,error:false}\r\n//     case \"UPDATING_FAIL\":\r\n//         return{...state, updateLoading: false, error: true};\r\n\r\n//         case \"FOLLOW_USER\":\r\n//             return {...state, authData: {...state.authData, user: {...state.authData.user, following: [...state.authData.user.following, action.data]} }}\r\n          \r\n//           case \"UNFOLLOW_USER\":\r\n//             return {...state, authData: {...state.authData, user: {...state.authData.user, following: [...state.authData.user.following.filter((personId)=>personId!==action.data)]} }}\r\n\r\n//     case \"LOG_OUT\":\r\n//         localStorage.clear();\r\n//         return{...state, authData: null, loading: false, error : false, updateLoading: false}\r\n//     default:\r\n//         return state\r\n//   }  \r\n// }\r\n// export default authReducer\r\n\r\n\r\nconst initialState = {\r\n    authData: null,\r\n    loading: false,\r\n    error: false,\r\n    updateLoading: false\r\n  };\r\n  \r\n  const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"AUTH_START\":\r\n        return { ...state, loading: true, error: false };\r\n  \r\n      case \"AUTH_SUCCESS\":\r\n        // Ensure action.data contains the correct structure, including `isAdmin`\r\n        localStorage.setItem(\"profile\", JSON.stringify({ ...action?.data }));\r\n        return {\r\n          ...state,\r\n          authData: action.data, // action.data should include user and isAdmin\r\n          loading: false,\r\n          error: false,\r\n        };\r\n  \r\n      case \"AUTH_FAIL\":\r\n        return { ...state, loading: false, error: true };\r\n  \r\n      case \"UPDATING_START\":\r\n        return { ...state, updateLoading: true, error: false };\r\n  \r\n      case \"UPDATING_SUCCESS\":\r\n        localStorage.setItem(\"profile\", JSON.stringify({ ...action?.data }));\r\n        return { ...state, authData: action.data, updateLoading: false, error: false };\r\n  \r\n      case \"UPDATING_FAIL\":\r\n        return { ...state, updateLoading: false, error: true };\r\n  \r\n      case \"FOLLOW_USER\":\r\n        return {\r\n          ...state,\r\n          authData: {\r\n            ...state.authData,\r\n            user: {\r\n              ...state.authData.user,\r\n              following: [...state.authData.user.following, action.data],\r\n            },\r\n          },\r\n        };\r\n  \r\n      case \"UNFOLLOW_USER\":\r\n        return {\r\n          ...state,\r\n          authData: {\r\n            ...state.authData,\r\n            user: {\r\n              ...state.authData.user,\r\n              following: state.authData.user.following.filter(\r\n                (personId) => personId !== action.data\r\n              ),\r\n            },\r\n          },\r\n        };\r\n  \r\n      case \"LOG_OUT\":\r\n        localStorage.clear();\r\n        return { ...state, authData: null, loading: false, error: false, updateLoading: false };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default authReducer;\r\n  "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMA,YAAY,GAAG;EACjBC,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,KAAK;EACZC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGF,KAAK;QAAEJ,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAM,CAAC;IAElD,KAAK,cAAc;MACjB;MACAM,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,IAAGL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,IAAI;MAAC,CAAC,CAAC,CAAC;MACpE,OAAO;QACL,GAAGP,KAAK;QACRL,QAAQ,EAAEM,MAAM,CAACM,IAAI;QAAE;QACvBX,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IAEH,KAAK,WAAW;MACd,OAAO;QAAE,GAAGG,KAAK;QAAEJ,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAK,CAAC;IAElD,KAAK,gBAAgB;MACnB,OAAO;QAAE,GAAGG,KAAK;QAAEF,aAAa,EAAE,IAAI;QAAED,KAAK,EAAE;MAAM,CAAC;IAExD,KAAK,kBAAkB;MACrBM,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,IAAGL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,IAAI;MAAC,CAAC,CAAC,CAAC;MACpE,OAAO;QAAE,GAAGP,KAAK;QAAEL,QAAQ,EAAEM,MAAM,CAACM,IAAI;QAAET,aAAa,EAAE,KAAK;QAAED,KAAK,EAAE;MAAM,CAAC;IAEhF,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGG,KAAK;QAAEF,aAAa,EAAE,KAAK;QAAED,KAAK,EAAE;MAAK,CAAC;IAExD,KAAK,aAAa;MAChB,OAAO;QACL,GAAGG,KAAK;QACRL,QAAQ,EAAE;UACR,GAAGK,KAAK,CAACL,QAAQ;UACjBa,IAAI,EAAE;YACJ,GAAGR,KAAK,CAACL,QAAQ,CAACa,IAAI;YACtBC,SAAS,EAAE,CAAC,GAAGT,KAAK,CAACL,QAAQ,CAACa,IAAI,CAACC,SAAS,EAAER,MAAM,CAACM,IAAI;UAC3D;QACF;MACF,CAAC;IAEH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGP,KAAK;QACRL,QAAQ,EAAE;UACR,GAAGK,KAAK,CAACL,QAAQ;UACjBa,IAAI,EAAE;YACJ,GAAGR,KAAK,CAACL,QAAQ,CAACa,IAAI;YACtBC,SAAS,EAAET,KAAK,CAACL,QAAQ,CAACa,IAAI,CAACC,SAAS,CAACC,MAAM,CAC5CC,QAAQ,IAAKA,QAAQ,KAAKV,MAAM,CAACM,IACpC;UACF;QACF;MACF,CAAC;IAEH,KAAK,SAAS;MACZJ,YAAY,CAACS,KAAK,CAAC,CAAC;MACpB,OAAO;QAAE,GAAGZ,KAAK;QAAEL,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE,KAAK;QAAEC,aAAa,EAAE;MAAM,CAAC;IAEzF;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}