{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { getTimelinePosts } from \"../actions/postAction\";\nimport Post from \"../post/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Posts.css\";\n// import { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  // const params = useParams()\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  let {\n    posts,\n    loading\n  } = useSelector(state => state.postReducer);\n  useEffect(() => {\n    dispatch(getTimelinePosts(user._id));\n  }, [dispatch, user._id]);\n\n  // if(!posts) return 'No Posts';\n  // if(params.id) posts = posts.filter((post)=> post.userId===params.id)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Posts\",\n    children: loading ? \"Fetching posts....\" : posts.map((post, id) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        data: post\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"DEGy9B+tgaWlnr2oMbnrnjVWNhs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","getTimelinePosts","Post","useSelector","useDispatch","jsxDEV","_jsxDEV","Posts","_s","dispatch","user","state","authReducer","authData","posts","loading","postReducer","_id","className","children","map","post","id","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/posts/Posts.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getTimelinePosts } from \"../actions/postAction\";\r\nimport Post from \"../post/Post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./Posts.css\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nconst Posts = () => {\r\n  // const params = useParams()\r\n  const dispatch = useDispatch()  \r\n  const { user } = useSelector((state) => state.authReducer.authData );\r\n  let { posts, loading } = useSelector((state) => state.postReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTimelinePosts(user._id))\r\n  }, [dispatch, user._id]);\r\n\r\n  // if(!posts) return 'No Posts';\r\n  // if(params.id) posts = posts.filter((post)=> post.userId===params.id)\r\n  return (\r\n    <div className=\"Posts\">\r\n      {loading\r\n        ? \"Fetching posts....\"\r\n        : posts.map((post, id) => {\r\n            return <Post data={post} key={id} />;\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,aAAa;AACpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM;EAAK,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,QAAS,CAAC;EACpE,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGZ,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACK,WAAW,CAAC;EAElEhB,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACR,gBAAgB,CAACS,IAAI,CAACO,GAAG,CAAC,CAAC;EACtC,CAAC,EAAE,CAACR,QAAQ,EAAEC,IAAI,CAACO,GAAG,CAAC,CAAC;;EAExB;EACA;EACA,oBACEX,OAAA;IAAKY,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBJ,OAAO,GACJ,oBAAoB,GACpBD,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,EAAE,KAAK;MACtB,oBAAOhB,OAAA,CAACJ,IAAI;QAACqB,IAAI,EAAEF;MAAK,GAAMC,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACtC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CArBID,KAAK;EAAA,QAEQH,WAAW,EACXD,WAAW,EACHA,WAAW;AAAA;AAAAyB,EAAA,GAJhCrB,KAAK;AAuBX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}