{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\admin\\\\Status.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { getAllUser } from '../api/UserRequest';\nimport { getTimelinePosts } from '../api/PostRequest';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Status = () => {\n  _s();\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [newUsersToday, setNewUsersToday] = useState(0);\n  const [totalPosts, setTotalPosts] = useState(0);\n\n  // Fetch users and calculate stats\n  useEffect(() => {\n    const fetchUsersAndPosts = async () => {\n      try {\n        const userResponse = await getAllUser();\n        const usersData = userResponse.data;\n\n        // Set total users count\n        setTotalUsers(usersData.length);\n\n        // Calculate new users today\n        const today = new Date().setHours(0, 0, 0, 0);\n        const newUsers = usersData.filter(user => {\n          const userCreatedAt = new Date(user.createdAt).setHours(0, 0, 0, 0);\n          return userCreatedAt === today;\n        });\n        setNewUsersToday(newUsers.length);\n\n        // Fetch posts for all users\n        const postPromises = usersData.map(user => getTimelinePosts(user._id));\n        const postResponses = await Promise.all(postPromises);\n\n        // Combine posts and remove duplicates\n        const posts = postResponses.flatMap(response => response.data);\n        const uniquePosts = Array.from(new Set(posts.map(post => post._id))) // Remove duplicates\n        .map(id => posts.find(post => post._id === id));\n        setTotalPosts(uniquePosts.length); // Set unique post count\n      } catch (error) {\n        console.error('Error fetching users or posts:', error);\n      }\n    };\n    fetchUsersAndPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-primary text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Total Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: totalUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-success text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Total Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: totalPosts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-warning text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Total Admins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-danger text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"New Users Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: newUsersToday\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Status, \"hIto9RqPs35dH0lx6UwmU2x58x8=\");\n_c = Status;\nexport default Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["React","useEffect","useState","Card","Row","Col","getAllUser","getTimelinePosts","jsxDEV","_jsxDEV","Fragment","_Fragment","Status","_s","totalUsers","setTotalUsers","newUsersToday","setNewUsersToday","totalPosts","setTotalPosts","fetchUsersAndPosts","userResponse","usersData","data","length","today","Date","setHours","newUsers","filter","user","userCreatedAt","createdAt","postPromises","map","_id","postResponses","Promise","all","posts","flatMap","response","uniquePosts","Array","from","Set","post","id","find","error","console","children","className","md","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/admin/Status.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { getAllUser } from '../api/UserRequest';\r\nimport { getTimelinePosts } from '../api/PostRequest';\r\n\r\nconst Status = () => {\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [newUsersToday, setNewUsersToday] = useState(0);\r\n  const [totalPosts, setTotalPosts] = useState(0);\r\n\r\n  // Fetch users and calculate stats\r\n  useEffect(() => {\r\n    const fetchUsersAndPosts = async () => {\r\n      try {\r\n        const userResponse = await getAllUser();\r\n        const usersData = userResponse.data;\r\n\r\n        // Set total users count\r\n        setTotalUsers(usersData.length);\r\n\r\n        // Calculate new users today\r\n        const today = new Date().setHours(0, 0, 0, 0);\r\n        const newUsers = usersData.filter((user) => {\r\n          const userCreatedAt = new Date(user.createdAt).setHours(0, 0, 0, 0);\r\n          return userCreatedAt === today;\r\n        });\r\n        setNewUsersToday(newUsers.length);\r\n\r\n        // Fetch posts for all users\r\n        const postPromises = usersData.map((user) => getTimelinePosts(user._id));\r\n        const postResponses = await Promise.all(postPromises);\r\n\r\n        // Combine posts and remove duplicates\r\n        const posts = postResponses.flatMap((response) => response.data);\r\n        const uniquePosts = Array.from(new Set(posts.map((post) => post._id))) // Remove duplicates\r\n          .map((id) => posts.find((post) => post._id === id));\r\n        setTotalPosts(uniquePosts.length); // Set unique post count\r\n      } catch (error) {\r\n        console.error('Error fetching users or posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchUsersAndPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <Card className=\"text-center bg-primary text-light\">\r\n            <Card.Body>\r\n              <Card.Title>Total Users</Card.Title>\r\n              <Card.Text>{totalUsers}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center bg-success text-light\">\r\n            <Card.Body>\r\n              <Card.Title>Total Posts</Card.Title>\r\n              <Card.Text>{totalPosts}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center bg-warning text-light\">\r\n            <Card.Body>\r\n              <Card.Title>Total Admins</Card.Title>\r\n              <Card.Text>1</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"text-center bg-danger text-light\">\r\n            <Card.Body>\r\n              <Card.Title>New Users Today</Card.Title>\r\n              <Card.Text>{newUsersToday}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}