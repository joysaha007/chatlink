{"ast":null,"code":"const authReducer = (state = {\n  authData: JSON.parse(localStorage.getItem(\"profile\")) || null,\n  loading: false,\n  error: false,\n  updateLoading: false\n}, action) => {\n  switch (action.type) {\n    case \"AUTH_START\":\n      return {\n        ...state,\n        loading: true,\n        error: false\n      };\n    case \"AUTH_SUCCESS\":\n      // Extract user and token from action.data\n      const {\n        user,\n        token\n      } = action.data;\n\n      // Store user and token separately for easier access\n      const profile = {\n        ...user,\n        token\n      };\n      console.log(\"Processed Profile Data:\", profile);\n\n      // Save the processed profile in localStorage\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      return {\n        ...state,\n        authData: profile,\n        loading: false,\n        error: false\n      };\n    case \"AUTH_FAIL\":\n      return {\n        ...state,\n        loading: false,\n        error: true\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["authReducer","state","authData","JSON","parse","localStorage","getItem","loading","error","updateLoading","action","type","user","token","data","profile","console","log","setItem","stringify"],"sources":["E:/React/Intern Project/chatlink/src/reducers/AuthReducer.js"],"sourcesContent":["const authReducer = (\r\n    state = { authData: JSON.parse(localStorage.getItem(\"profile\")) || null, loading: false, error: false, updateLoading: false },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case \"AUTH_START\":\r\n        return { ...state, loading: true, error: false };\r\n      case \"AUTH_SUCCESS\":\r\n        // Extract user and token from action.data\r\n        const { user, token } = action.data;\r\n  \r\n        // Store user and token separately for easier access\r\n        const profile = { ...user, token };\r\n  \r\n        console.log(\"Processed Profile Data:\", profile);\r\n  \r\n        // Save the processed profile in localStorage\r\n        localStorage.setItem(\"profile\", JSON.stringify(profile));\r\n  \r\n        return { ...state, authData: profile, loading: false, error: false };\r\n      case \"AUTH_FAIL\":\r\n        return { ...state, loading: false, error: true };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default authReducer;\r\n  "],"mappings":"AAAA,MAAMA,WAAW,GAAGA,CAChBC,KAAK,GAAG;EAAEC,QAAQ,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI;EAAEC,OAAO,EAAE,KAAK;EAAEC,KAAK,EAAE,KAAK;EAAEC,aAAa,EAAE;AAAM,CAAC,EAC7HC,MAAM,KACH;EACH,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGV,KAAK;QAAEM,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAM,CAAC;IAClD,KAAK,cAAc;MACjB;MACA,MAAM;QAAEI,IAAI;QAAEC;MAAM,CAAC,GAAGH,MAAM,CAACI,IAAI;;MAEnC;MACA,MAAMC,OAAO,GAAG;QAAE,GAAGH,IAAI;QAAEC;MAAM,CAAC;MAElCG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,OAAO,CAAC;;MAE/C;MACAV,YAAY,CAACa,OAAO,CAAC,SAAS,EAAEf,IAAI,CAACgB,SAAS,CAACJ,OAAO,CAAC,CAAC;MAExD,OAAO;QAAE,GAAGd,KAAK;QAAEC,QAAQ,EAAEa,OAAO;QAAER,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAM,CAAC;IACtE,KAAK,WAAW;MACd,OAAO;QAAE,GAAGP,KAAK;QAAEM,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAK,CAAC;IAClD;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}