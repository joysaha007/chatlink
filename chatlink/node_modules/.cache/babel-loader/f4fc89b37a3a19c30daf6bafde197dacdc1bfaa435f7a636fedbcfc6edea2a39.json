{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\admin\\\\PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\nimport { getTimelinePosts } from '../api/PostRequest'; // Import the API function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const userId = '6757eeeabacab91a5683266c'; // Replace with actual user ID\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER; // Access the public folder URL from .env\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await getTimelinePosts(userId);\n        setPosts(response.data); // Set the posts data from API response\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      className: \"g-4\",\n      children: [\" \", posts.map(post => /*#__PURE__*/_jsxDEV(Col, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: post.image ? `${PF}${post.image}` : `${PF}default-image.jpg` // Dynamically use .env URL\n            ,\n            alt: \"Post\",\n            className: \"rounded\",\n            style: {\n              height: '200px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Author:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), \" \", post.author, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 58\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), \" \", new Date(post.createdAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                children: \"View Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                size: \"sm\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                size: \"sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","Card","Button","Row","Col","Container","getTimelinePosts","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","userId","PF","process","env","REACT_APP_PUBLIC_FOLDER","fetchPosts","response","data","error","console","className","children","xs","md","lg","map","post","Img","variant","src","image","alt","style","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","author","Date","createdAt","toLocaleDateString","size","_id","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/admin/PostList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\r\nimport { getTimelinePosts } from '../api/PostRequest'; // Import the API function\r\n\r\nconst PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const userId = '6757eeeabacab91a5683266c'; // Replace with actual user ID\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER; // Access the public folder URL from .env\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await getTimelinePosts(userId);\r\n        setPosts(response.data); // Set the posts data from API response\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Row xs={1} md={2} lg={3} className=\"g-4\"> {/* Responsive grid */}\r\n        {posts.map(post => (\r\n          <Col key={post._id}> {/* Use post._id as the unique key */}\r\n            <Card className=\"h-100 shadow-sm\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={post.image ? `${PF}${post.image}` : `${PF}default-image.jpg`} // Dynamically use .env URL\r\n                alt=\"Post\"\r\n                className=\"rounded\"\r\n                style={{ height: '200px', objectFit: 'cover' }}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{post.title}</Card.Title>\r\n                <Card.Text>\r\n                  <strong>Author:</strong> {post.author} <br />\r\n                  <strong>Date:</strong> {new Date(post.createdAt).toLocaleDateString()}\r\n                </Card.Text>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Button variant=\"info\" size=\"sm\">\r\n                    View Post\r\n                  </Button>\r\n                  <Button variant=\"warning\" size=\"sm\">\r\n                    Edit\r\n                  </Button>\r\n                  <Button variant=\"danger\" size=\"sm\">\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}