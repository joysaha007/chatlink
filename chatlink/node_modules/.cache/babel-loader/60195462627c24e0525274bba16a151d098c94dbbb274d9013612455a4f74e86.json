{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\ChatBox\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { addMessage, getMessages } from \"../api/MessageRequest\";\nimport { getUser } from \"../api/UserRequest\";\nimport \"./ChatBox.css\";\nimport { format } from \"timeago.js\";\nimport InputEmoji from 'react-input-emoji';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  chat,\n  currentUser,\n  setSendMessage,\n  receivedMessage\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const handleChange = newMessage => {\n    setNewMessage(newMessage);\n  };\n\n  // fetching data for header\n  useEffect(() => {\n    var _chat$members;\n    const userId = chat === null || chat === void 0 ? void 0 : (_chat$members = chat.members) === null || _chat$members === void 0 ? void 0 : _chat$members.find(id => id !== currentUser);\n    const getUserData = async () => {\n      try {\n        const {\n          data\n        } = await getUser(userId);\n        setUserData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) getUserData();\n  }, [chat, currentUser]);\n\n  // fetch messages\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const {\n          data\n        } = await getMessages(chat._id);\n        setMessages(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) fetchMessages();\n  }, [chat]);\n\n  // Always scroll to last Message\n  useEffect(() => {\n    var _scroll$current;\n    (_scroll$current = scroll.current) === null || _scroll$current === void 0 ? void 0 : _scroll$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Send Message\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderId: currentUser,\n      text: newMessage,\n      chatId: chat._id\n    };\n    const receiverId = chat.members.find(id => id !== currentUser);\n    // send message to socket server\n    setSendMessage({\n      ...message,\n      receiverId\n    });\n    // send message to database\n    try {\n      const {\n        data\n      } = await addMessage(message);\n      setMessages([...messages, data]);\n      setNewMessage(\"\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  // Receive Message from parent component\n  useEffect(() => {\n    console.log(\"Message Arrived: \", receivedMessage);\n    if (receivedMessage !== null && receivedMessage.chatId === chat._id) {\n      setMessages([...messages, receivedMessage]);\n    }\n  }, [receivedMessage]);\n  const scroll = useRef();\n  const imageRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox-container\",\n      children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"follower\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData !== null && userData !== void 0 && userData.profilePicture ? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : process.env.REACT_APP_PUBLIC_FOLDER + \"defaultProfile.png\",\n                alt: \"Profile\",\n                className: \"followerImage\",\n                style: {\n                  width: \"50px\",\n                  height: \"50px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                style: {\n                  fontSize: \"0.9rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [userData === null || userData === void 0 ? void 0 : userData.firstname, \" \", userData === null || userData === void 0 ? void 0 : userData.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              width: \"95%\",\n              border: \"0.1px solid #ececec\",\n              marginTop: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scroll,\n              className: message.senderId === currentUser ? \"message own\" : \"message\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: format(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-sender\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => imageRef.current.click(),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputEmoji, {\n            value: newMessage,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-button button\",\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"\",\n            id: \"\",\n            style: {\n              display: \"none\"\n            },\n            ref: imageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatbox-empty-message\",\n        children: \"Tap on a chat to start conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBox, \"TP0imqgIuVfMlkfD4OBwzjd87IQ=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useState","useRef","addMessage","getMessages","getUser","format","InputEmoji","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","chat","currentUser","setSendMessage","receivedMessage","_s","userData","setUserData","messages","setMessages","newMessage","setNewMessage","handleChange","_chat$members","userId","members","find","id","getUserData","data","error","console","log","fetchMessages","_id","_scroll$current","scroll","current","scrollIntoView","behavior","handleSend","e","preventDefault","message","senderId","text","chatId","receiverId","imageRef","children","className","src","profilePicture","process","env","REACT_APP_PUBLIC_FOLDER","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","firstname","lastname","border","marginTop","map","ref","createdAt","onClick","click","value","onChange","type","name","display","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { addMessage, getMessages } from \"../api/MessageRequest\";\r\nimport { getUser } from \"../api/UserRequest\";\r\nimport \"./ChatBox.css\";\r\nimport { format } from \"timeago.js\";\r\nimport InputEmoji from 'react-input-emoji'\r\n\r\nconst ChatBox = ({ chat, currentUser, setSendMessage,  receivedMessage }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  const handleChange = (newMessage)=> {\r\n    setNewMessage(newMessage)\r\n  }\r\n\r\n  // fetching data for header\r\n  useEffect(() => {\r\n    const userId = chat?.members?.find((id) => id !== currentUser);\r\n    const getUserData = async () => {\r\n      try {\r\n        const { data } = await getUser(userId);\r\n        setUserData(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    if (chat !== null) getUserData();\r\n  }, [chat, currentUser]);\r\n\r\n  // fetch messages\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const { data } = await getMessages(chat._id);\r\n        setMessages(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    if (chat !== null) fetchMessages();\r\n  }, [chat]);\r\n\r\n\r\n  // Always scroll to last Message\r\n  useEffect(()=> {\r\n    scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  },[messages])\r\n\r\n\r\n\r\n  // Send Message\r\n  const handleSend = async(e)=> {\r\n    e.preventDefault()\r\n    const message = {\r\n      senderId : currentUser,\r\n      text: newMessage,\r\n      chatId: chat._id,\r\n  }\r\n  const receiverId = chat.members.find((id)=>id!==currentUser);\r\n  // send message to socket server\r\n  setSendMessage({...message, receiverId})\r\n  // send message to database\r\n  try {\r\n    const { data } = await addMessage(message);\r\n    setMessages([...messages, data]);\r\n    setNewMessage(\"\");\r\n  }\r\n  catch\r\n  {\r\n    console.log(\"error\")\r\n  }\r\n}\r\n\r\n// Receive Message from parent component\r\nuseEffect(()=> {\r\n  console.log(\"Message Arrived: \", receivedMessage)\r\n  if (receivedMessage !== null && receivedMessage.chatId === chat._id) {\r\n    setMessages([...messages, receivedMessage]);\r\n  }\r\n\r\n},[receivedMessage])\r\n\r\n\r\n\r\n  const scroll = useRef();\r\n  const imageRef = useRef();\r\n  return (\r\n    <>\r\n      <div className=\"ChatBox-container\">\r\n        {chat ? (\r\n          <>\r\n            {/* chat-header */}\r\n            <div className=\"chat-header\">\r\n              <div className=\"follower\">\r\n                <div>\r\n                  <img\r\n                    src={\r\n                      userData?.profilePicture\r\n                        ? process.env.REACT_APP_PUBLIC_FOLDER +\r\n                          userData.profilePicture\r\n                        : process.env.REACT_APP_PUBLIC_FOLDER +\r\n                          \"defaultProfile.png\"\r\n                    }\r\n                    alt=\"Profile\"\r\n                    className=\"followerImage\"\r\n                    style={{ width: \"50px\", height: \"50px\" }}\r\n                  />\r\n                  <div className=\"name\" style={{ fontSize: \"0.9rem\" }}>\r\n                    <span>\r\n                      {userData?.firstname} {userData?.lastname}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr\r\n                style={{\r\n                  width: \"95%\",\r\n                  border: \"0.1px solid #ececec\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              />\r\n            </div>\r\n            {/* chat-body */}\r\n            <div className=\"chat-body\" >\r\n              {messages.map((message) => (\r\n                <>\r\n                  <div ref={scroll}\r\n                    className={\r\n                      message.senderId === currentUser\r\n                        ? \"message own\"\r\n                        : \"message\"\r\n                    }\r\n                  >\r\n                    <span>{message.text}</span>{\" \"}\r\n                    <span>{format(message.createdAt)}</span>\r\n                  </div>\r\n                </>\r\n              ))}\r\n            </div>\r\n            {/* chat-sender */}\r\n            <div className=\"chat-sender\">\r\n              <div onClick={() => imageRef.current.click()}>+</div>\r\n              <InputEmoji\r\n                value={newMessage}\r\n                onChange={handleChange}\r\n              />\r\n              <div className=\"send-button button\" onClick = {handleSend}>Send</div>\r\n              <input\r\n                type=\"file\"\r\n                name=\"\"\r\n                id=\"\"\r\n                style={{ display: \"none\" }}\r\n                ref={imageRef}\r\n              />\r\n            </div>{\" \"}\r\n          </>\r\n        ) : (\r\n          <span className=\"chatbox-empty-message\">\r\n            Tap on a chat to start conversation...\r\n          </span>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}