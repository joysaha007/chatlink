{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { getTimelinePosts } from \"../actions/postAction\";\nimport Post from \"../post/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Posts.css\";\nimport { useParams } from \"react-router-dom\";\n// import { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  let {\n    posts = [],\n    loading\n  } = useSelector(state => state.postReducer);\n  const params = useParams();\n  useEffect(() => {\n    if (user && user._id) {\n      dispatch(getTimelinePosts(user._id));\n    }\n  }, [dispatch, user]);\n  console.log(posts); // Check the posts data\n  if (!posts) return 'No Posts';\n  if (params.id) posts = posts.filter(post => post.userId === params.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Posts\",\n    children: loading ? \"Fetching posts....\" : posts && posts.length > 0 ? posts.map((post, id) => /*#__PURE__*/_jsxDEV(Post, {\n      data: post\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Posts Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"Rwj2wKGJC17HKzM4EB9GLP0hIeQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","getTimelinePosts","Post","useSelector","useDispatch","useParams","jsxDEV","_jsxDEV","Posts","_s","dispatch","user","state","authReducer","authData","posts","loading","postReducer","params","_id","console","log","id","filter","post","userId","className","children","length","map","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/posts/Posts.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getTimelinePosts } from \"../actions/postAction\";\r\nimport Post from \"../post/Post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./Posts.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nconst Posts = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.authReducer.authData);\r\n  let { posts = [], loading } = useSelector((state) => state.postReducer);\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    if (user && user._id) {\r\n      dispatch(getTimelinePosts(user._id));\r\n    }\r\n  }, [dispatch, user]);\r\n  \r\n  console.log(posts); // Check the posts data\r\n  if(!posts) return'No Posts';\r\n  if(params.id) posts = posts.filter((post)=>post.userId===params.id)\r\n\r\n  return (\r\n    <div className=\"Posts\">\r\n      {loading ? (\r\n        \"Fetching posts....\"\r\n      ) : posts && posts.length > 0 ? (\r\n        posts.map((post, id) => <Post data={post} key={id} />)\r\n      ) : (\r\n        <p>No Posts Available</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,aAAa;AACpB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAK,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,QAAQ,CAAC;EACnE,IAAI;IAAEC,KAAK,GAAG,EAAE;IAAEC;EAAQ,CAAC,GAAGb,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACK,WAAW,CAAC;EACvE,MAAMC,MAAM,GAAGb,SAAS,CAAC,CAAC;EAE1BL,SAAS,CAAC,MAAM;IACd,IAAIW,IAAI,IAAIA,IAAI,CAACQ,GAAG,EAAE;MACpBT,QAAQ,CAACT,gBAAgB,CAACU,IAAI,CAACQ,GAAG,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,CAACT,QAAQ,EAAEC,IAAI,CAAC,CAAC;EAEpBS,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC,CAAC,CAAC;EACpB,IAAG,CAACA,KAAK,EAAE,OAAM,UAAU;EAC3B,IAAGG,MAAM,CAACI,EAAE,EAAEP,KAAK,GAAGA,KAAK,CAACQ,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACC,MAAM,KAAGP,MAAM,CAACI,EAAE,CAAC;EAEnE,oBACEf,OAAA;IAAKmB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBX,OAAO,GACN,oBAAoB,GAClBD,KAAK,IAAIA,KAAK,CAACa,MAAM,GAAG,CAAC,GAC3Bb,KAAK,CAACc,GAAG,CAAC,CAACL,IAAI,EAAEF,EAAE,kBAAKf,OAAA,CAACL,IAAI;MAAC4B,IAAI,EAAEN;IAAK,GAAMF,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,gBAEtD3B,OAAA;MAAAoB,QAAA,EAAG;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA3BID,KAAK;EAAA,QACQJ,WAAW,EACXD,WAAW,EACEA,WAAW,EAC1BE,SAAS;AAAA;AAAA8B,EAAA,GAJpB3B,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}