{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\admin\\\\Status.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { getAllUser } from '../api/UserRequest';\nimport { getTimelinePosts } from '../api/PostRequest';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Status = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [newUsersToday, setNewUsersToday] = useState(0);\n  const [allPosts, setAllPosts] = useState([]);\n  const [totalPosts, setTotalPosts] = useState(0);\n\n  // Fetch all users on component mount\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await getAllUser();\n        const usersData = response.data;\n        setUsers(usersData);\n        setTotalUsers(usersData.length); // Set the total number of users\n\n        // Get today's date\n        const today = new Date().setHours(0, 0, 0, 0); // Start of today (midnight)\n\n        // Filter users created today\n        const newUsers = usersData.filter(user => {\n          const userCreatedAt = new Date(user.createdAt).setHours(0, 0, 0, 0);\n          return userCreatedAt === today; // Check if the user's creation date is today\n        });\n        setNewUsersToday(newUsers.length); // Set the count of new users today\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    const fetchUsersAndPosts = async () => {\n      try {\n        const userResponse = await getAllUser(); // Fetch all users\n        const userList = userResponse.data;\n        setUsers(userList);\n\n        // Fetch posts for all users\n        const postPromises = userList.map(user => getTimelinePosts(user._id));\n        const postResponses = await Promise.all(postPromises);\n\n        // Combine all posts into a single array\n        const posts = postResponses.flatMap(response => response.data);\n        setAllPosts(posts);\n\n        // Set total posts count\n        setTotalPosts(posts.length);\n      } catch (error) {\n        console.error('Error fetching users or posts:', error);\n      }\n    };\n    fetchUsersAndPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-primary text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Total Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: totalUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-success text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Total Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: totalPosts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-warning text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Total Admins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center bg-danger text-light\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"New Users Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: newUsersToday\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Status, \"SrKX0cbrbzy6kzsUCCL+7cOAF4Q=\");\n_c = Status;\nexport default Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["React","useEffect","useState","Card","Row","Col","getAllUser","getTimelinePosts","jsxDEV","_jsxDEV","Fragment","_Fragment","Status","_s","users","setUsers","totalUsers","setTotalUsers","newUsersToday","setNewUsersToday","allPosts","setAllPosts","totalPosts","setTotalPosts","fetchUsers","response","usersData","data","length","today","Date","setHours","newUsers","filter","user","userCreatedAt","createdAt","error","console","fetchUsersAndPosts","userResponse","userList","postPromises","map","_id","postResponses","Promise","all","posts","flatMap","children","className","md","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/admin/Status.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { getAllUser} from '../api/UserRequest';\r\nimport { getTimelinePosts } from '../api/PostRequest';\r\nconst Status = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [newUsersToday, setNewUsersToday] = useState(0);\r\n  const [allPosts, setAllPosts] = useState([]);\r\nconst [totalPosts, setTotalPosts] = useState(0);\r\n\r\n  \r\n  // Fetch all users on component mount\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await getAllUser();\r\n        const usersData = response.data;\r\n        setUsers(usersData);\r\n        setTotalUsers(usersData.length); // Set the total number of users\r\n  \r\n        // Get today's date\r\n        const today = new Date().setHours(0, 0, 0, 0); // Start of today (midnight)\r\n  \r\n        // Filter users created today\r\n        const newUsers = usersData.filter(user => {\r\n          const userCreatedAt = new Date(user.createdAt).setHours(0, 0, 0, 0);\r\n          return userCreatedAt === today; // Check if the user's creation date is today\r\n        });\r\n  \r\n        setNewUsersToday(newUsers.length); // Set the count of new users today\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchUsersAndPosts = async () => {\r\n      try {\r\n        const userResponse = await getAllUser(); // Fetch all users\r\n        const userList = userResponse.data;\r\n  \r\n        setUsers(userList);\r\n  \r\n        // Fetch posts for all users\r\n        const postPromises = userList.map((user) => getTimelinePosts(user._id));\r\n        const postResponses = await Promise.all(postPromises);\r\n  \r\n        // Combine all posts into a single array\r\n        const posts = postResponses.flatMap((response) => response.data);\r\n        setAllPosts(posts);\r\n  \r\n        // Set total posts count\r\n        setTotalPosts(posts.length);\r\n      } catch (error) {\r\n        console.error('Error fetching users or posts:', error);\r\n      }\r\n    };\r\n  \r\n    fetchUsersAndPosts();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row className=\"mb-4\">\r\n      <Col md={3}>\r\n        <Card className=\"text-center bg-primary text-light\">\r\n          <Card.Body>\r\n            <Card.Title>Total Users</Card.Title>\r\n            <Card.Text>{totalUsers}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n      <Col md={3}>\r\n        <Card className=\"text-center bg-success text-light\">\r\n          <Card.Body>\r\n            <Card.Title>Total Posts</Card.Title>\r\n            <Card.Text>{totalPosts}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n      <Col md={3}>\r\n        <Card className=\"text-center bg-warning text-light\">\r\n          <Card.Body>\r\n            <Card.Title>Total Admins</Card.Title>\r\n            <Card.Text>1</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n      <Col md={3}>\r\n        <Card className=\"text-center bg-danger text-light\">\r\n          <Card.Body>\r\n            <Card.Title>New Users Today</Card.Title>\r\n            <Card.Text>{newUsersToday}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Status\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}