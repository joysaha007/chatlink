{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\admin\\\\PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\nimport { getAllUser } from '../api/UserRequest'; // Import API functions\nimport { getTimelinePosts } from '../api/PostRequest'; // Import Post API function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER; // Access the public folder URL from .env\n\n  // Fetch all users and their posts\n  useEffect(() => {\n    const fetchUsersAndPosts = async () => {\n      try {\n        const userResponse = await getAllUser(); // Fetch all users\n        const userList = userResponse.data;\n        setUsers(userList);\n\n        // Fetch posts for all users\n        const postPromises = userList.map(user => getTimelinePosts(user._id));\n        const postResponses = await Promise.all(postPromises);\n\n        // Combine all posts into a single array\n        const posts = postResponses.flatMap(response => response.data);\n        setAllPosts(posts);\n      } catch (error) {\n        console.error('Error fetching users or posts:', error);\n      }\n    };\n    fetchUsersAndPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 mt-3\",\n      children: \"All User Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      className: \"g-4\",\n      children: [\" \", allPosts.map(post => /*#__PURE__*/_jsxDEV(Col, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: post.image ? `${PF}${post.image}` : `${PF}default-image.jpg` // Dynamically use .env URL\n            ,\n            alt: \"Post\",\n            className: \"rounded\",\n            style: {\n              height: '200px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Author:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), \" \", post.author, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 58\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), \" \", new Date(post.createdAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                children: \"View Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                size: \"sm\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                size: \"sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"P+b5EkTAJfUnSGY1fJpCbaF5gA8=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","Card","Button","Row","Col","Container","getAllUser","getTimelinePosts","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","allPosts","setAllPosts","PF","process","env","REACT_APP_PUBLIC_FOLDER","fetchUsersAndPosts","userResponse","userList","data","postPromises","map","user","_id","postResponses","Promise","all","posts","flatMap","response","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","lg","post","Img","variant","src","image","alt","style","height","objectFit","Body","Title","title","Text","author","Date","createdAt","toLocaleDateString","size","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/admin/PostList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\r\nimport { getAllUser } from '../api/UserRequest'; // Import API functions\r\nimport { getTimelinePosts } from '../api/PostRequest'; // Import Post API function\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER; // Access the public folder URL from .env\r\n\r\n  // Fetch all users and their posts\r\n  useEffect(() => {\r\n    const fetchUsersAndPosts = async () => {\r\n      try {\r\n        const userResponse = await getAllUser(); // Fetch all users\r\n        const userList = userResponse.data;\r\n\r\n        setUsers(userList);\r\n\r\n        // Fetch posts for all users\r\n        const postPromises = userList.map((user) => getTimelinePosts(user._id));\r\n        const postResponses = await Promise.all(postPromises);\r\n\r\n        // Combine all posts into a single array\r\n        const posts = postResponses.flatMap((response) => response.data);\r\n        setAllPosts(posts);\r\n      } catch (error) {\r\n        console.error('Error fetching users or posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchUsersAndPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"mb-4 mt-3\">All User Posts</h2>\r\n      <Row xs={1} md={2} lg={3} className=\"g-4\"> {/* Responsive grid */}\r\n        {allPosts.map((post) => (\r\n          <Col key={post._id}> {/* Use post._id as the unique key */}\r\n            <Card className=\"h-100 shadow-sm\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={post.image ? `${PF}${post.image}` : `${PF}default-image.jpg`} // Dynamically use .env URL\r\n                alt=\"Post\"\r\n                className=\"rounded\"\r\n                style={{ height: '200px', objectFit: 'cover' }}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{post.title}</Card.Title>\r\n                <Card.Text>\r\n                  <strong>Author:</strong> {post.author} <br />\r\n                  <strong>Date:</strong> {new Date(post.createdAt).toLocaleDateString()}\r\n                </Card.Text>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Button variant=\"info\" size=\"sm\">\r\n                    View Post\r\n                  </Button>\r\n                  <Button variant=\"warning\" size=\"sm\">\r\n                    Edit\r\n                  </Button>\r\n                  <Button variant=\"danger\" size=\"sm\">\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,QAAQ,iBAAiB;AACnE,SAASC,UAAU,QAAQ,oBAAoB,CAAC,CAAC;AACjD,SAASC,gBAAgB,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAAC,CAAC;;EAEhD;EACApB,SAAS,CAAC,MAAM;IACd,MAAMqB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMf,UAAU,CAAC,CAAC,CAAC,CAAC;QACzC,MAAMgB,QAAQ,GAAGD,YAAY,CAACE,IAAI;QAElCV,QAAQ,CAACS,QAAQ,CAAC;;QAElB;QACA,MAAME,YAAY,GAAGF,QAAQ,CAACG,GAAG,CAAEC,IAAI,IAAKnB,gBAAgB,CAACmB,IAAI,CAACC,GAAG,CAAC,CAAC;QACvE,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;;QAErD;QACA,MAAMO,KAAK,GAAGH,aAAa,CAACI,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,CAACV,IAAI,CAAC;QAChER,WAAW,CAACgB,KAAK,CAAC;MACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDd,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACJ,SAAS;IAAC+B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzB5B,OAAA;MAAI2B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7ChC,OAAA,CAACN,GAAG;MAACuC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACR,SAAS,EAAC,KAAK;MAAAC,QAAA,GAAC,GAAC,EACxCvB,QAAQ,CAACW,GAAG,CAAEoB,IAAI,iBACjBpC,OAAA,CAACL,GAAG;QAAAiC,QAAA,GAAgB,GAAC,eACnB5B,OAAA,CAACR,IAAI;UAACmC,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC/B5B,OAAA,CAACR,IAAI,CAAC6C,GAAG;YACPC,OAAO,EAAC,KAAK;YACbC,GAAG,EAAEH,IAAI,CAACI,KAAK,GAAG,GAAGjC,EAAE,GAAG6B,IAAI,CAACI,KAAK,EAAE,GAAG,GAAGjC,EAAE,mBAAoB,CAAC;YAAA;YACnEkC,GAAG,EAAC,MAAM;YACVd,SAAS,EAAC,SAAS;YACnBe,KAAK,EAAE;cAAEC,MAAM,EAAE,OAAO;cAAEC,SAAS,EAAE;YAAQ;UAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACFhC,OAAA,CAACR,IAAI,CAACqD,IAAI;YAAAjB,QAAA,gBACR5B,OAAA,CAACR,IAAI,CAACsD,KAAK;cAAAlB,QAAA,EAAEQ,IAAI,CAACW;YAAK;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACrChC,OAAA,CAACR,IAAI,CAACwD,IAAI;cAAApB,QAAA,gBACR5B,OAAA;gBAAA4B,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACa,MAAM,EAAC,GAAC,eAAAjD,OAAA;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7ChC,OAAA;gBAAA4B,QAAA,EAAQ;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,IAAIkB,IAAI,CAACd,IAAI,CAACe,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,eACZhC,OAAA;cAAK2B,SAAS,EAAC,gCAAgC;cAAAC,QAAA,gBAC7C5B,OAAA,CAACP,MAAM;gBAAC6C,OAAO,EAAC,MAAM;gBAACe,IAAI,EAAC,IAAI;gBAAAzB,QAAA,EAAC;cAEjC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACThC,OAAA,CAACP,MAAM;gBAAC6C,OAAO,EAAC,SAAS;gBAACe,IAAI,EAAC,IAAI;gBAAAzB,QAAA,EAAC;cAEpC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACThC,OAAA,CAACP,MAAM;gBAAC6C,OAAO,EAAC,QAAQ;gBAACe,IAAI,EAAC,IAAI;gBAAAzB,QAAA,EAAC;cAEnC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA,GA3BCI,IAAI,CAAClB,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4Bb,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC9B,EAAA,CAnEID,QAAQ;AAAAqD,EAAA,GAARrD,QAAQ;AAqEd,eAAeA,QAAQ;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}