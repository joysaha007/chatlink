{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as chatApi from '../api/ChatRequest'; // Assuming you have an API utility for making requests\n\n// Action to create a chat\nexport const createChat = createAsyncThunk('chat/createChat', async (chatData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await chatApi.post('/chat/', chatData); // Make a POST request to the API\n    return response.data; // Return the response data (chat information)\n  } catch (error) {\n    return rejectWithValue(error.response.data); // If there's an error, return the error response\n  }\n});","map":{"version":3,"names":["createAsyncThunk","chatApi","createChat","chatData","rejectWithValue","response","post","data","error"],"sources":["E:/React/Intern Project/chatlink/src/components/actions/ChatAction.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as chatApi from '../api/ChatRequest'; // Assuming you have an API utility for making requests\r\n\r\n// Action to create a chat\r\nexport const createChat = createAsyncThunk(\r\n  'chat/createChat',\r\n  async (chatData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await chatApi.post('/chat/', chatData); // Make a POST request to the API\r\n      return response.data; // Return the response data (chat information)\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data); // If there's an error, return the error response\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAO,KAAKC,OAAO,MAAM,oBAAoB,CAAC,CAAC;;AAE/C;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CACxC,iBAAiB,EACjB,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,QAAQ,EAAEH,QAAQ,CAAC,CAAC,CAAC;IACzD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOJ,eAAe,CAACI,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;EAC/C;AACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}