{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Intern Project\\\\chatlink\\\\src\\\\components\\\\admin\\\\Notification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNotification, getNotifications, markNotificationAsRead, deleteNotification } from \"../actions/NotificationAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    notifications,\n    loading,\n    error\n  } = useSelector(state => state.notifications);\n  const [newNotification, setNewNotification] = useState({\n    message: \"\",\n    type: \"\"\n  });\n  const [userId, setUserId] = useState(\"\"); // Admin will specify user ID\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(getNotifications(userId));\n    }\n  }, [dispatch, userId]);\n  const handleCreateNotification = () => {\n    if (newNotification.message && newNotification.type) {\n      dispatch(createNotification(userId, newNotification.message, newNotification.type));\n      setNewNotification({\n        message: \"\",\n        type: \"\"\n      }); // Reset after creation\n    } else {\n      alert(\"Please fill in all fields.\");\n    }\n  };\n  const handleMarkAsRead = notificationId => {\n    dispatch(markNotificationAsRead(notificationId));\n  };\n  const handleDeleteNotification = notificationId => {\n    dispatch(deleteNotification(notificationId));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewNotification(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        value: newNotification.message,\n        onChange: handleInputChange,\n        placeholder: \"Enter notification message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: newNotification.type,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alert\",\n          children: \"Alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"reminder\",\n          children: \"Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateNotification,\n        children: \"Create Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Notifications for User \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter User ID\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading notifications...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error loading notifications: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notifications && notifications.length > 0 ? notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"notification-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type: \", notification.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", notification.read ? \"Read\" : \"Unread\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMarkAsRead(notification.id),\n            children: \"Mark as Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteNotification(notification.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No notifications available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"ojQ1DI741F8/slyit/7vuA+1aRk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","createNotification","getNotifications","markNotificationAsRead","deleteNotification","jsxDEV","_jsxDEV","Notification","_s","dispatch","notifications","loading","error","state","newNotification","setNewNotification","message","type","userId","setUserId","handleCreateNotification","alert","handleMarkAsRead","notificationId","handleDeleteNotification","handleInputChange","e","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","length","map","notification","read","id","_c","$RefreshReg$"],"sources":["E:/React/Intern Project/chatlink/src/components/admin/Notification.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createNotification,\r\n  getNotifications,\r\n  markNotificationAsRead,\r\n  deleteNotification,\r\n} from \"../actions/NotificationAction\";\r\n\r\nconst Notification = () => {\r\n  const dispatch = useDispatch();\r\n  const { notifications, loading, error } = useSelector((state) => state.notifications);\r\n  const [newNotification, setNewNotification] = useState({ message: \"\", type: \"\" });\r\n  const [userId, setUserId] = useState(\"\"); // Admin will specify user ID\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(getNotifications(userId));\r\n    }\r\n  }, [dispatch, userId]);\r\n\r\n  const handleCreateNotification = () => {\r\n    if (newNotification.message && newNotification.type) {\r\n      dispatch(createNotification(userId, newNotification.message, newNotification.type));\r\n      setNewNotification({ message: \"\", type: \"\" }); // Reset after creation\r\n    } else {\r\n      alert(\"Please fill in all fields.\");\r\n    }\r\n  };\r\n\r\n  const handleMarkAsRead = (notificationId) => {\r\n    dispatch(markNotificationAsRead(notificationId));\r\n  };\r\n\r\n  const handleDeleteNotification = (notificationId) => {\r\n    dispatch(deleteNotification(notificationId));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewNotification((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      <h2>Manage Notifications</h2>\r\n      <div className=\"create-notification\">\r\n        <h3>Create Notification</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"message\"\r\n          value={newNotification.message}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter notification message\"\r\n        />\r\n        <select\r\n          name=\"type\"\r\n          value={newNotification.type}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select Type</option>\r\n          <option value=\"message\">Message</option>\r\n          <option value=\"alert\">Alert</option>\r\n          <option value=\"reminder\">Reminder</option>\r\n        </select>\r\n        <button onClick={handleCreateNotification}>Create Notification</button>\r\n      </div>\r\n\r\n      <div className=\"notifications-list\">\r\n        <h3>Notifications for User {userId}</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter User ID\"\r\n          value={userId}\r\n          onChange={(e) => setUserId(e.target.value)}\r\n        />\r\n        {loading ? (\r\n          <p>Loading notifications...</p>\r\n        ) : error ? (\r\n          <p>Error loading notifications: {error}</p>\r\n        ) : (\r\n          <ul>\r\n            {notifications && notifications.length > 0 ? (\r\n              notifications.map((notification) => (\r\n                <li key={notification.id} className=\"notification-item\">\r\n                  <p>{notification.message}</p>\r\n                  <p>Type: {notification.type}</p>\r\n                  <p>Status: {notification.read ? \"Read\" : \"Unread\"}</p>\r\n                  <button onClick={() => handleMarkAsRead(notification.id)}>\r\n                    Mark as Read\r\n                  </button>\r\n                  <button onClick={() => handleDeleteNotification(notification.id)}>\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>No notifications available.</p>\r\n            )}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}